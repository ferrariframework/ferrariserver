// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/ferrariframework/ferrariserver/store (interfaces: Worker,Run,JobLog,Job)

package mock

import (
	models "github.com/ferrariframework/ferrariserver/models"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Worker interface
type MockWorker struct {
	ctrl     *gomock.Controller
	recorder *_MockWorkerRecorder
}

// Recorder for MockWorker (not exported)
type _MockWorkerRecorder struct {
	mock *MockWorker
}

func NewMockWorker(ctrl *gomock.Controller) *MockWorker {
	mock := &MockWorker{ctrl: ctrl}
	mock.recorder = &_MockWorkerRecorder{mock}
	return mock
}

func (_m *MockWorker) EXPECT() *_MockWorkerRecorder {
	return _m.recorder
}

func (_m *MockWorker) Get(_param0 string) (*models.Worker, error) {
	ret := _m.ctrl.Call(_m, "Get", _param0)
	ret0, _ := ret[0].(*models.Worker)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockWorkerRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}

func (_m *MockWorker) Save(_param0 *models.Worker) (*models.Worker, error) {
	ret := _m.ctrl.Call(_m, "Save", _param0)
	ret0, _ := ret[0].(*models.Worker)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockWorkerRecorder) Save(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Save", arg0)
}

func (_m *MockWorker) Update(_param0 string, _param1 *models.Worker) error {
	ret := _m.ctrl.Call(_m, "Update", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockWorkerRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Update", arg0, arg1)
}

// Mock of Run interface
type MockRun struct {
	ctrl     *gomock.Controller
	recorder *_MockRunRecorder
}

// Recorder for MockRun (not exported)
type _MockRunRecorder struct {
	mock *MockRun
}

func NewMockRun(ctrl *gomock.Controller) *MockRun {
	mock := &MockRun{ctrl: ctrl}
	mock.recorder = &_MockRunRecorder{mock}
	return mock
}

func (_m *MockRun) EXPECT() *_MockRunRecorder {
	return _m.recorder
}

func (_m *MockRun) Get(_param0 string) (*models.Run, error) {
	ret := _m.ctrl.Call(_m, "Get", _param0)
	ret0, _ := ret[0].(*models.Run)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockRunRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}

func (_m *MockRun) Save(_param0 *models.Run) (*models.Run, error) {
	ret := _m.ctrl.Call(_m, "Save", _param0)
	ret0, _ := ret[0].(*models.Run)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockRunRecorder) Save(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Save", arg0)
}

func (_m *MockRun) Update(_param0 string, _param1 *models.Run) error {
	ret := _m.ctrl.Call(_m, "Update", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRunRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Update", arg0, arg1)
}

// Mock of JobLog interface
type MockJobLog struct {
	ctrl     *gomock.Controller
	recorder *_MockJobLogRecorder
}

// Recorder for MockJobLog (not exported)
type _MockJobLogRecorder struct {
	mock *MockJobLog
}

func NewMockJobLog(ctrl *gomock.Controller) *MockJobLog {
	mock := &MockJobLog{ctrl: ctrl}
	mock.recorder = &_MockJobLogRecorder{mock}
	return mock
}

func (_m *MockJobLog) EXPECT() *_MockJobLogRecorder {
	return _m.recorder
}

func (_m *MockJobLog) Save(_param0 []*models.JobLog) error {
	ret := _m.ctrl.Call(_m, "Save", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockJobLogRecorder) Save(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Save", arg0)
}

// Mock of Job interface
type MockJob struct {
	ctrl     *gomock.Controller
	recorder *_MockJobRecorder
}

// Recorder for MockJob (not exported)
type _MockJobRecorder struct {
	mock *MockJob
}

func NewMockJob(ctrl *gomock.Controller) *MockJob {
	mock := &MockJob{ctrl: ctrl}
	mock.recorder = &_MockJobRecorder{mock}
	return mock
}

func (_m *MockJob) EXPECT() *_MockJobRecorder {
	return _m.recorder
}

func (_m *MockJob) Get(_param0 string) (*models.Job, error) {
	ret := _m.ctrl.Call(_m, "Get", _param0)
	ret0, _ := ret[0].(*models.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockJobRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}

func (_m *MockJob) Save(_param0 *models.Job) (*models.Job, error) {
	ret := _m.ctrl.Call(_m, "Save", _param0)
	ret0, _ := ret[0].(*models.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockJobRecorder) Save(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Save", arg0)
}

func (_m *MockJob) Update(_param0 string, _param1 *models.Job) error {
	ret := _m.ctrl.Call(_m, "Update", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockJobRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Update", arg0, arg1)
}
